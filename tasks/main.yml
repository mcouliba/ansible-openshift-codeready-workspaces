---
- name: check if {{ project_name }} project exists
  command: "oc get project {{ project_name }}"
  register: project_result
  ignore_errors: true
  changed_when: false

- name: create {{ project_name }} project
  command: >
      oc new-project {{ project_name }}
      --display-name='{{ project_display_name }}'
      --description='{{ project_desc }}'
  when: project_result is failed

- name: Change Project
  command: "oc project {{ project_name }}"
  changed_when: true

- name: get Openshift Token
  command: "oc whoami -t"
  register: openshift_token
  changed_when: true

- name: get Openshift API URL
  command: "oc whoami --show-server"
  register: cmd_result
  changed_when: true

- name: init 'openshift_api_uri' variable
  set_fact:
    openshift_api_uri: "{{ cmd_result.stdout }}"

- name: check if {{ operator_service_account_name }} service account exists
  command: "oc get sa {{ operator_service_account_name }}"
  register: service_account_result
  ignore_errors: true
  changed_when: false

- name: create service account for the operator
  command: "oc create sa {{ operator_service_account_name }}"
  register: res_cmd
  changed_when: res_cmd.rc == 0
  when: service_account_result is failed

- name: grant admin role to the service acccount
  command: >
      oc create rolebinding {{ operator_service_account_name }} 
      --clusterrole=admin 
      --serviceaccount={{ project_name }}:{{ operator_service_account_name }}
  register: res_cmd
  changed_when: res_cmd.rc == 0

- name: deploy CodeReady Workspaces
  include_tasks: deploy-crw.yml
  vars:
    oc_token: "{{ openshift_token.stdout }}"
